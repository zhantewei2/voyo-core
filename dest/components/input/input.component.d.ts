import { VoyoComponent, VoyoEventEmitter } from "../commonComponent";
import { ColorVarious, SizeVarious } from "../../types/base-types";
import { InputType } from "./input.interface";
import { ClassManage } from "../../utils/ClassManage";
import { ExcuteAfterConnected } from "../utils";
import { InputInterface, visualInputType } from "./input";
import { TapInput } from "./tap-input";
export declare class InputComponent extends VoyoComponent {
    wrapper: HTMLElement;
    inputContainer: HTMLElement;
    classManage: ClassManage;
    inputType: InputType;
    placeholderEl: HTMLElement;
    prefixEl: HTMLElement;
    clearEl: HTMLElement;
    _disabled: boolean;
    excuteAfterConnected: ExcuteAfterConnected;
    onlyTap: boolean;
    clearable: boolean;
    set disabled(v: boolean);
    set size(v: SizeVarious);
    set color(v: ColorVarious);
    set type(v: InputType);
    set placeholder(v: string);
    set contentType(v: visualInputType);
    visual: boolean;
    set value(v: any);
    valueEvent: VoyoEventEmitter<any>;
    focusEvent: VoyoEventEmitter<any>;
    blurEvent: VoyoEventEmitter<any>;
    tapEvent: VoyoEventEmitter<any>;
    enterEvent: VoyoEventEmitter<any>;
    clearEvent: VoyoEventEmitter<any>;
    prefixExists0: boolean;
    input: InputInterface;
    tapInput: TapInput;
    set prefixExists(v: boolean);
    suffixExists0: boolean;
    set suffixExists(v: boolean);
    footerExists0: boolean;
    set footerExists(v: boolean);
    placeholderShow: undefined | boolean;
    getPrefixWidth(): number;
    showPlaceholderRun(v: boolean): void;
    showPlaceHolder(v: boolean): void;
    watchPlaceholderShow(): void;
    isClearable: boolean;
    watchClearable(): void;
    isFocus0: boolean;
    set isFocus(v: boolean);
    get isFocus(): boolean;
    focus(): void;
    blur(): void;
    toFocus(): void;
    enter(): void;
    value0: any;
    setValue(v: any, fromInput?: boolean): void;
    clearValue(): void;
    created(): void;
    mounted(): void;
    disconnectedCallback(): void;
    listenSlotChange(): void;
    handleFooterSlot(): void;
}
